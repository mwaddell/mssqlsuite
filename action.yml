name: "mssql suite"
branding:
  icon: "database"
  color: "yellow"
description: "Installs a SQL Server suite of tools including sqlcmd, bcp, sqlpackage, db engine and localdb for Windows, macOS and Linux."
inputs:
  install:
    description: "The apps to install"
    required: true
  sa-password:
    description: "The sa password for the SQL instance"
    required: false
    default: "dbatools.I0"
  show-log:
    description: "Show the log file for the docker container"
    required: false
    default: "false"
  collation:
    description: "Change the collation associated with the SQL Server instance"
    required: false
    default: "SQL_Latin1_General_CP1_CI_AS"
  version:
    description: "The version of SQL Server to install in year format"
    required: false
    default: "2022"
runs:
  using: "composite"
  steps:
    - if: ${{ runner.os == 'Windows' && contains(inputs.install, 'sqlengine') }}
      uses: actions/cache@v3
      with:
        path: |
          C:\Temp\sqlsetup.exe
          C:\Temp\sqlsetup.box
        key: "mssqlsuite-sqlengine-${{ runner.os }}-${{ inputs.version }}"

    - if: ${{ runner.os == 'Windows' && contains(inputs.install, 'localdb') }}
      uses: actions/cache@v3
      with:
        path: C:\Temp\SqlLocalDB.msi
        key: "mssqlsuite-localdb-${{ runner.os }}-${{ inputs.version }}"

    - if: ${{ runner.os != 'Windows' && contains(inputs.install, 'sqlengine') }}
      uses: actions/cache@v3
      with:
        path: /tmp/mssql.tar
        key: "mssqlsuite-sqlengine-${{ runner.os }}-${{ inputs.version }}"

    - id: psoutput
      shell: pwsh
      env:
        ACCEPT_EULA: "Y"
        HOMEBREW_ACCEPT_EULA: "Y"
        HOMEBREW_NO_INSTALL_CLEANUP: "Y"
        SA_PASSWORD: ${{ inputs.sa-password }}
        MSSQL_AGENT_ENABLED: "true"
      run: |
        Write-Output "Getting variables for suite"

        $params = @{
            Install         = ("${{ inputs.install }}" -split ",").Trim()
            SaPassword      = "${{ inputs.sa-password }}"
            ShowLog         = ("${{ inputs.show-log }}" -ieq "true")
            Collation       = "${{ inputs.Collation }}"
            Version         = "${{ inputs.Version }}"
        }

        ${{ github.action_path }}/main.ps1 @params
